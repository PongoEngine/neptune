[{
	access: [APublic]
	doc: null
	kind: FVar(null, {
		expr: EConst(CString(Neptune, DoubleQuotes))
		pos: #pos
	})
	meta: []
	name: name
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: []
		expr: {
			expr: EBlock([{
				expr: null <- expected value
				pos: null <- expected value
			}])
			pos: #pos
		}
		params: []
		ret: TPath({
			name: Void
			pack: []
			params: []
			sub: null
		})
	})
	meta: []
	name: new
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: []
		expr: {
			expr: EBlock([{
				expr: EVars([{
					expr: {
						expr: EConst(CInt(0))
						pos: #pos
					}
					isFinal: false
					name: x
					type: null
				}])
				pos: #pos
			}, {
				expr: EVars([{
					expr: {
						expr: ECall({
							expr: EConst(CIdent(createText))
							pos: #pos
						}, [{
							expr: EConst(CIdent(x))
							pos: #pos
						}])
						pos: #pos
					}
					isFinal: null
					name: nep_x
					type: null
				}])
				pos: #pos
			}, {
				expr: EFunction(FNamed(set_x, null), {
					args: [{
						meta: null
						name: new_x
						opt: false
						type: null
						value: null
					}]
					expr: {
						expr: EBlock([{
							expr: EBinop(OpAssign, {
								expr: EConst(CIdent(x))
								pos: #pos
							}, {
								expr: EConst(CIdent(new_x))
								pos: #pos
							})
							pos: #pos
						}, {
							expr: ECall({
								expr: EConst(CIdent(updateTextNode))
								pos: #pos
							}, [{
								expr: EConst(CIdent(nep_x))
								pos: #pos
							}, {
								expr: EConst(CIdent(x))
								pos: #pos
							}])
							pos: #pos
						}])
						pos: #pos
					}
					params: null
					ret: null
				})
				pos: #pos
			}, {
				expr: EVars([{
					expr: {
						expr: EConst(CInt(0))
						pos: #pos
					}
					isFinal: false
					name: y
					type: null
				}])
				pos: #pos
			}, {
				expr: EVars([{
					expr: {
						expr: ECall({
							expr: EConst(CIdent(createText))
							pos: #pos
						}, [{
							expr: EConst(CIdent(y))
							pos: #pos
						}])
						pos: #pos
					}
					isFinal: null
					name: nep_y
					type: null
				}])
				pos: #pos
			}, {
				expr: EFunction(FNamed(set_y, null), {
					args: [{
						meta: null
						name: new_y
						opt: false
						type: null
						value: null
					}]
					expr: {
						expr: EBlock([{
							expr: EBinop(OpAssign, {
								expr: EConst(CIdent(y))
								pos: #pos
							}, {
								expr: EConst(CIdent(new_y))
								pos: #pos
							})
							pos: #pos
						}, {
							expr: ECall({
								expr: EConst(CIdent(updateTextNode))
								pos: #pos
							}, [{
								expr: EConst(CIdent(nep_y))
								pos: #pos
							}, {
								expr: EConst(CIdent(y))
								pos: #pos
							}])
							pos: #pos
						}])
						pos: #pos
					}
					params: null
					ret: null
				})
				pos: #pos
			}, {
				expr: EVars([{
					expr: {
						expr: EConst(CInt(3))
						pos: #pos
					}
					isFinal: false
					name: q
					type: null
				}])
				pos: #pos
			}, {
				expr: EFunction(FNamed(click, false), {
					args: []
					expr: {
						expr: EBlock([{
							expr: ECall({
								expr: EConst(CIdent(set_x))
								pos: #pos
							}, [{
								expr: EBinop(OpAdd, {
									expr: EBinop(OpAdd, {
										expr: EConst(CIdent(x))
										pos: #pos
									}, {
										expr: EConst(CInt(1))
										pos: #pos
									})
									pos: #pos
								}, {
									expr: EConst(CIdent(q))
									pos: #pos
								})
								pos: #pos
							}])
							pos: #pos
						}, {
							expr: ECall({
								expr: EConst(CIdent(set_y))
								pos: #pos
							}, [{
								expr: EBinop(OpSub, {
									expr: EConst(CIdent(y))
									pos: #pos
								}, {
									expr: EConst(CInt(2))
									pos: #pos
								})
								pos: #pos
							}])
							pos: #pos
						}, {
							expr: EBinop(OpAssign, {
								expr: EField({
									expr: EConst(CIdent(this))
									pos: #pos
								}, name)
								pos: #pos
							}, {
								expr: EConst(CString(Sage, DoubleQuotes))
								pos: #pos
							})
							pos: #pos
						}])
						pos: #pos
					}
					params: []
					ret: null
				})
				pos: #pos
			}, {
				expr: EVars([{
					expr: {
						expr: EBlock([{
							expr: EVars([{
								expr: {
									expr: ECall({
										expr: EConst(CIdent(createElement))
										pos: #pos
									}, [{
										expr: EConst(CString(Button, null))
										pos: #pos
									}])
									pos: #pos
								}
								isFinal: null
								name: elem
								type: null
							}])
							pos: #pos
						}, {
							expr: ECall({
								expr: EConst(CIdent(addChildren))
								pos: #pos
							}, [{
								expr: EConst(CIdent(elem))
								pos: #pos
							}, {
								expr: EArrayDecl([{
									expr: ECall({
										expr: EConst(CIdent(createText))
										pos: #pos
									}, [{
										expr: EConst(CString(Update XY, null))
										pos: #pos
									}])
									pos: #pos
								}])
								pos: #pos
							}])
							pos: #pos
						}, {
							expr: EArrayDecl([{
								expr: ECall({
									expr: EConst(CIdent(onclick))
									pos: #pos
								}, [{
									expr: EConst(CIdent(elem))
									pos: #pos
								}, {
									expr: EConst(CIdent(click))
									pos: #pos
								}])
								pos: #pos
							}])
							pos: #pos
						}, {
							expr: EConst(CIdent(elem))
							pos: #pos
						}])
						pos: #pos
					}
					isFinal: false
					name: markup
					type: null
				}])
				pos: #pos
			}, {
				expr: EReturn({
					expr: EBlock([{
						expr: EVars([{
							expr: {
								expr: ECall({
									expr: EConst(CIdent(createElement))
									pos: #pos
								}, [{
									expr: EConst(CString(div, null))
									pos: #pos
								}])
								pos: #pos
							}
							isFinal: null
							name: elem
							type: null
						}])
						pos: #pos
					}, {
						expr: ECall({
							expr: EConst(CIdent(addChildren))
							pos: #pos
						}, [{
							expr: EConst(CIdent(elem))
							pos: #pos
						}, {
							expr: EArrayDecl([{
								expr: ECall({
									expr: EConst(CIdent(createText))
									pos: #pos
								}, [{
									expr: EConst(CString( , null))
									pos: #pos
								}])
								pos: #pos
							}, {
								expr: EBlock([{
									expr: EVars([{
										expr: {
											expr: ECall({
												expr: EConst(CIdent(createElement))
												pos: #pos
											}, [{
												expr: EConst(CString(h1, null))
												pos: #pos
											}])
											pos: #pos
										}
										isFinal: null
										name: elem
										type: null
									}])
									pos: #pos
								}, {
									expr: ECall({
										expr: EConst(CIdent(addChildren))
										pos: #pos
									}, [{
										expr: EConst(CIdent(elem))
										pos: #pos
									}, {
										expr: EArrayDecl([{
											expr: ECall({
												expr: EConst(CIdent(createText))
												pos: #pos
											}, [{
												expr: EConst(CString(x: , null))
												pos: #pos
											}])
											pos: #pos
										}, {
											expr: EConst(CIdent(nep_x))
											pos: #pos
										}])
										pos: #pos
									}])
									pos: #pos
								}, {
									expr: EArrayDecl([])
									pos: #pos
								}, {
									expr: EConst(CIdent(elem))
									pos: #pos
								}])
								pos: #pos
							}, {
								expr: ECall({
									expr: EConst(CIdent(createText))
									pos: #pos
								}, [{
									expr: EConst(CString( , null))
									pos: #pos
								}])
								pos: #pos
							}, {
								expr: EBlock([{
									expr: EVars([{
										expr: {
											expr: ECall({
												expr: EConst(CIdent(createElement))
												pos: #pos
											}, [{
												expr: EConst(CString(h2, null))
												pos: #pos
											}])
											pos: #pos
										}
										isFinal: null
										name: elem
										type: null
									}])
									pos: #pos
								}, {
									expr: ECall({
										expr: EConst(CIdent(addChildren))
										pos: #pos
									}, [{
										expr: EConst(CIdent(elem))
										pos: #pos
									}, {
										expr: EArrayDecl([{
											expr: ECall({
												expr: EConst(CIdent(createText))
												pos: #pos
											}, [{
												expr: EConst(CString(y: , null))
												pos: #pos
											}])
											pos: #pos
										}, {
											expr: EConst(CIdent(nep_y))
											pos: #pos
										}])
										pos: #pos
									}])
									pos: #pos
								}, {
									expr: EArrayDecl([])
									pos: #pos
								}, {
									expr: EConst(CIdent(elem))
									pos: #pos
								}])
								pos: #pos
							}, {
								expr: ECall({
									expr: EConst(CIdent(createText))
									pos: #pos
								}, [{
									expr: EConst(CString( , null))
									pos: #pos
								}])
								pos: #pos
							}, {
								expr: EBlock([{
									expr: EVars([{
										expr: {
											expr: ECall({
												expr: EConst(CIdent(createElement))
												pos: #pos
											}, [{
												expr: EConst(CString(h3, null))
												pos: #pos
											}])
											pos: #pos
										}
										isFinal: null
										name: elem
										type: null
									}])
									pos: #pos
								}, {
									expr: ECall({
										expr: EConst(CIdent(addChildren))
										pos: #pos
									}, [{
										expr: EConst(CIdent(elem))
										pos: #pos
									}, {
										expr: EArrayDecl([{
											expr: ECall({
												expr: EConst(CIdent(createText))
												pos: #pos
											}, [{
												expr: EConst(CString(name: , null))
												pos: #pos
											}])
											pos: #pos
										}, {
											expr: EConst(CIdent(nep_name))
											pos: #pos
										}])
										pos: #pos
									}])
									pos: #pos
								}, {
									expr: EArrayDecl([])
									pos: #pos
								}, {
									expr: EConst(CIdent(elem))
									pos: #pos
								}])
								pos: #pos
							}, {
								expr: ECall({
									expr: EConst(CIdent(createText))
									pos: #pos
								}, [{
									expr: EConst(CString( , null))
									pos: #pos
								}])
								pos: #pos
							}, {
								expr: EConst(CIdent(markup))
								pos: #pos
							}, {
								expr: ECall({
									expr: EConst(CIdent(createText))
									pos: #pos
								}, [{
									expr: EConst(CString( , null))
									pos: #pos
								}])
								pos: #pos
							}])
							pos: #pos
						}])
						pos: #pos
					}, {
						expr: EArrayDecl([{
							expr: ECall({
								expr: EConst(CIdent(addAttr))
								pos: #pos
							}, [{
								expr: EConst(CIdent(elem))
								pos: #pos
							}, {
								expr: EConst(CString(class, null))
								pos: #pos
							}, {
								expr: EConst(CString(taco, null))
								pos: #pos
							}])
							pos: #pos
						}])
						pos: #pos
					}, {
						expr: EConst(CIdent(elem))
						pos: #pos
					}])
					pos: #pos
				})
				pos: #pos
			}])
			pos: #pos
		}
		params: []
		ret: TPath({
			name: Node
			pack: []
			params: []
			sub: null
		})
	})
	meta: []
	name: cool
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FVar(TPath({
		name: Dynamic
		pack: []
		params: []
		sub: null
	}), null)
	meta: null
	name: nep_name
	pos: #pos
}]
line 18: expected value
line 19: expected value