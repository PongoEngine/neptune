[{
	access: [APublic]
	doc: null
	kind: FProp(default, set, TPath({
		name: Int
		pack: []
		params: []
		sub: null
	}), {
		expr: EConst(CInt(1))
		pos: #pos
	})
	meta: []
	name: numba
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FVar(TPath({
		name: Int
		pack: []
		params: []
		sub: null
	}), {
		expr: EConst(CInt(10))
		pos: #pos
	})
	meta: []
	name: ten
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FProp(default, set, TPath({
		name: String
		pack: []
		params: []
		sub: null
	}), {
		expr: EConst(CString(Hai, DoubleQuotes))
		pos: #pos
	})
	meta: []
	name: hai
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: []
		expr: {
			expr: EBlock([{
				expr: EBinop(OpAssignOp(OpAdd), {
					expr: EConst(CIdent(numba))
					pos: #pos
				}, {
					expr: EConst(CInt(1))
					pos: #pos
				})
				pos: #pos
			}])
			pos: #pos
		}
		params: []
		ret: null
	})
	meta: null
	name: handleClick
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: []
		expr: {
			expr: EBlock([{
				expr: EReturn({
					expr: EBlock([{
						expr: EVars([{
							expr: {
								expr: ECall({
									expr: EConst(CIdent(createElement))
									pos: #pos
								}, [{
									expr: EConst(CString(div, null))
									pos: #pos
								}])
								pos: #pos
							}
							isFinal: null
							name: div
							type: null
						}])
						pos: #pos
					}, {
						expr: ECall({
							expr: EConst(CIdent(addChild))
							pos: #pos
						}, [{
							expr: EConst(CIdent(div))
							pos: #pos
						}, {
							expr: ECall({
								expr: EConst(CIdent(createText))
								pos: #pos
							}, [{
								expr: EConst(CString( , null))
								pos: #pos
							}])
							pos: #pos
						}])
						pos: #pos
					}, {
						expr: ECall({
							expr: EConst(CIdent(addChild))
							pos: #pos
						}, [{
							expr: EConst(CIdent(div))
							pos: #pos
						}, {
							expr: EBlock([{
								expr: EVars([{
									expr: {
										expr: ECall({
											expr: EConst(CIdent(createElement))
											pos: #pos
										}, [{
											expr: EConst(CString(h2, null))
											pos: #pos
										}])
										pos: #pos
									}
									isFinal: null
									name: h2
									type: null
								}])
								pos: #pos
							}, {
								expr: ECall({
									expr: EConst(CIdent(addChild))
									pos: #pos
								}, [{
									expr: EConst(CIdent(h2))
									pos: #pos
								}, {
									expr: EConst(CIdent(null <- expected String))
									pos: #pos
								}])
								pos: #pos
							}, {
								expr: ECall({
									expr: EConst(CIdent(addChild))
									pos: #pos
								}, [{
									expr: EConst(CIdent(h2))
									pos: #pos
								}, {
									expr: ECall({
										expr: EConst(CIdent(createText))
										pos: #pos
									}, [{
										expr: EConst(CString( - , null))
										pos: #pos
									}])
									pos: #pos
								}])
								pos: #pos
							}, {
								expr: ECall({
									expr: EConst(CIdent(addChild))
									pos: #pos
								}, [{
									expr: EConst(CIdent(h2))
									pos: #pos
								}, {
									expr: EConst(CIdent(null <- expected String))
									pos: #pos
								}])
								pos: #pos
							}, {
								expr: EConst(CIdent(h2))
								pos: #pos
							}])
							pos: #pos
						}])
						pos: #pos
					}, {
						expr: ECall({
							expr: EConst(CIdent(addChild))
							pos: #pos
						}, [{
							expr: EConst(CIdent(div))
							pos: #pos
						}, {
							expr: ECall({
								expr: EConst(CIdent(createText))
								pos: #pos
							}, [{
								expr: EConst(CString( , null))
								pos: #pos
							}])
							pos: #pos
						}])
						pos: #pos
					}, {
						expr: ECall({
							expr: EConst(CIdent(addChild))
							pos: #pos
						}, [{
							expr: EConst(CIdent(div))
							pos: #pos
						}, {
							expr: EBlock([{
								expr: EVars([{
									expr: {
										expr: ECall({
											expr: EConst(CIdent(createElement))
											pos: #pos
										}, [{
											expr: EConst(CString(button, null))
											pos: #pos
										}])
										pos: #pos
									}
									isFinal: null
									name: button
									type: null
								}])
								pos: #pos
							}, {
								expr: ECall({
									expr: EConst(CIdent(addAttr))
									pos: #pos
								}, [{
									expr: EConst(CIdent(button))
									pos: #pos
								}, {
									expr: EConst(CString(class, null))
									pos: #pos
								}, {
									expr: EConst(CString(button, null))
									pos: #pos
								}])
								pos: #pos
							}, {
								expr: ECall({
									expr: EConst(CIdent(addAttrEvent))
									pos: #pos
								}, [{
									expr: EConst(CIdent(button))
									pos: #pos
								}, {
									expr: EConst(CString(onclick, null))
									pos: #pos
								}, {
									expr: EConst(CIdent(handleClick))
									pos: #pos
								}])
								pos: #pos
							}, {
								expr: ECall({
									expr: EConst(CIdent(addChild))
									pos: #pos
								}, [{
									expr: EConst(CIdent(button))
									pos: #pos
								}, {
									expr: ECall({
										expr: EConst(CIdent(createText))
										pos: #pos
									}, [{
										expr: EConst(CString(Increment, null))
										pos: #pos
									}])
									pos: #pos
								}])
								pos: #pos
							}, {
								expr: EConst(CIdent(button))
								pos: #pos
							}])
							pos: #pos
						}])
						pos: #pos
					}, {
						expr: ECall({
							expr: EConst(CIdent(addChild))
							pos: #pos
						}, [{
							expr: EConst(CIdent(div))
							pos: #pos
						}, {
							expr: ECall({
								expr: EConst(CIdent(createText))
								pos: #pos
							}, [{
								expr: EConst(CString( , null))
								pos: #pos
							}])
							pos: #pos
						}])
						pos: #pos
					}, {
						expr: EConst(CIdent(div))
						pos: #pos
					}])
					pos: #pos
				})
				pos: #pos
			}])
			pos: #pos
		}
		params: []
		ret: TPath({
			name: Element
			pack: []
			params: []
			sub: null
		})
	})
	meta: null
	name: template
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FVar(TPath({
		name: Dynamic
		pack: []
		params: []
		sub: null
	}), null)
	meta: null
	name: null <- expected value
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FVar(TPath({
		name: Dynamic
		pack: []
		params: []
		sub: null
	}), null)
	meta: null
	name: null <- expected value
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: []
		expr: {
			expr: EBlock([{
				expr: EBinop(OpAssign, {
					expr: EConst(CIdent(null <- expected String))
					pos: #pos
				}, {
					expr: ECall({
						expr: EConst(CIdent(createText))
						pos: #pos
					}, [{
						expr: EConst(CIdent(numba))
						pos: #pos
					}])
					pos: #pos
				})
				pos: #pos
			}, {
				expr: EBinop(OpAssign, {
					expr: EConst(CIdent(null <- expected String))
					pos: #pos
				}, {
					expr: ECall({
						expr: EConst(CIdent(createText))
						pos: #pos
					}, [{
						expr: EConst(CIdent(hai))
						pos: #pos
					}])
					pos: #pos
				})
				pos: #pos
			}])
			pos: #pos
		}
		params: null
		ret: null
	})
	meta: null
	name: new
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: [{
			meta: null
			name: val
			opt: null
			type: null
			value: null
		}]
		expr: {
			expr: EBlock([{
				expr: EBinop(OpAssign, {
					expr: EConst(CIdent(numba))
					pos: #pos
				}, {
					expr: EConst(CIdent(val))
					pos: #pos
				})
				pos: #pos
			}, {
				expr: ECall({
					expr: EConst(CIdent(updateIdent))
					pos: #pos
				}, [{
					expr: EConst(CIdent(numba))
					pos: #pos
				}, {
					expr: EArrayDecl([{
						expr: ECall({
							expr: EConst(CIdent(updateTextNode))
							pos: #pos
						}, [{
							expr: EConst(CIdent(null <- expected String))
							pos: #pos
						}])
						pos: #pos
					}])
					pos: #pos
				}])
				pos: #pos
			}, {
				expr: EReturn({
					expr: EConst(CIdent(val))
					pos: #pos
				})
				pos: #pos
			}])
			pos: #pos
		}
		params: null
		ret: null
	})
	meta: null
	name: set_numba
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: [{
			meta: null
			name: val
			opt: null
			type: null
			value: null
		}]
		expr: {
			expr: EBlock([{
				expr: EBinop(OpAssign, {
					expr: EConst(CIdent(hai))
					pos: #pos
				}, {
					expr: EConst(CIdent(val))
					pos: #pos
				})
				pos: #pos
			}, {
				expr: ECall({
					expr: EConst(CIdent(updateIdent))
					pos: #pos
				}, [{
					expr: EConst(CIdent(hai))
					pos: #pos
				}, {
					expr: EArrayDecl([{
						expr: ECall({
							expr: EConst(CIdent(updateTextNode))
							pos: #pos
						}, [{
							expr: EConst(CIdent(null <- expected String))
							pos: #pos
						}])
						pos: #pos
					}])
					pos: #pos
				}])
				pos: #pos
			}, {
				expr: EReturn({
					expr: EConst(CIdent(val))
					pos: #pos
				})
				pos: #pos
			}])
			pos: #pos
		}
		params: null
		ret: null
	})
	meta: null
	name: set_hai
	pos: #pos
}]
line 146: expected String
line 176: expected String
line 334: expected value
line 346: expected value
line 356: expected String
line 371: expected String
line 427: expected String
line 484: expected String