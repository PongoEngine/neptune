[{
	access: [APublic]
	doc: null
	kind: FVar(null, {
		expr: EConst(CString(Hi, DoubleQuotes))
		pos: #pos
	})
	meta: []
	name: hello
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: []
		expr: {
			expr: EBlock([])
			pos: #pos
		}
		params: []
		ret: TPath({
			name: Void
			pack: []
			params: []
			sub: null
		})
	})
	meta: []
	name: new
	pos: #pos
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: []
		expr: {
			expr: EBlock([{
				expr: EVars([{
					expr: {
						expr: null <- expected value
						pos: #pos
					}
					isFinal: false
					name: x
					type: null
				}])
				pos: #pos
			}, {
				expr: EFunction(FNamed(cool, false), {
					args: []
					expr: {
						expr: EBlock([{
							expr: ECall({
								expr: EConst(CIdent(trace))
								pos: #pos
							}, [{
								expr: EConst(CString(sup!, DoubleQuotes))
								pos: #pos
							}])
							pos: #pos
						}, {
							expr: EReturn({
								expr: EConst(CString(<h1>Hello</h1>, null))
								pos: #pos
							})
							pos: #pos
						}])
						pos: #pos
					}
					params: []
					ret: null
				})
				pos: #pos
			}, {
				expr: ECall({
					expr: EConst(CIdent(trace))
					pos: #pos
				}, [{
					expr: EConst(CIdent(x))
					pos: #pos
				}])
				pos: #pos
			}, {
				expr: EReturn({
					expr: EConst(CString(<h1 onclick={changeX}>{x}{y}{z}{hello}</h1>, null))
					pos: #pos
				})
				pos: #pos
			}])
			pos: #pos
		}
		params: []
		ret: TPath({
			name: String
			pack: []
			params: []
			sub: null
		})
	})
	meta: []
	name: template
	pos: #pos
}]
line 40: expected value