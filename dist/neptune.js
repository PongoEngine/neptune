// Generated by Haxe 4.1.3
(function ($global) { "use strict";
var Expressions = function() {
};
Expressions.__name__ = true;
Expressions.prototype = {
	template: function() {
		var set_x = function(val) {
		};
		var x = 3;
		var text_6 = window.document.createTextNode(x);
		var for_frag_array_g_2 = [];
		var onClick = function() {
			set_x(x + 1);
		};
		set_x = function(val) {
			x = val;
			var for_frag_array_l_3 = [];
			var _g = 0;
			var _g1 = x;
			while(_g < _g1) {
				var text_4 = window.document.createTextNode(_g++);
				var element_h1_5 = window.document.createElement("h1");
				neptune_platform_html_HtmlPlatform.addChildren(element_h1_5,[window.document.createTextNode("I of X: "),text_4]);
				for_frag_array_l_3.push(element_h1_5);
			}
			haxe_Log.trace(for_frag_array_g_2.length,{ fileName : "src/neptune/platform/html/HtmlPlatform.hx", lineNumber : 119, className : "neptune.platform.html.HtmlPlatform", methodName : "updateFragment", customParams : [for_frag_array_l_3.length]});
			text_6.textContent = x;
		};
		var element_div_8 = window.document.createElement("div");
		var tmp = window.document.createTextNode(" ");
		var element_button_0 = window.document.createElement("button");
		neptune_platform_html_HtmlPlatform.addChildren(element_button_0,[window.document.createTextNode("Increment")]);
		element_button_0.onclick = onClick;
		var tmp1 = window.document.createTextNode(" ");
		var for_frag_array_l_3 = [];
		var _g = 0;
		var _g1 = x;
		while(_g < _g1) {
			var text_4 = window.document.createTextNode(_g++);
			var element_h1_5 = window.document.createElement("h1");
			neptune_platform_html_HtmlPlatform.addChildren(element_h1_5,[window.document.createTextNode("I of X: "),text_4]);
			for_frag_array_l_3.push(element_h1_5);
		}
		var for_frag_1 = window.document.createDocumentFragment();
		for_frag_array_g_2 = for_frag_array_l_3;
		var _g = 0;
		while(_g < for_frag_array_g_2.length) for_frag_1.appendChild(for_frag_array_g_2[_g++]);
		var tmp2 = window.document.createTextNode(" ");
		var element_h2_7 = window.document.createElement("h2");
		neptune_platform_html_HtmlPlatform.addChildren(element_h2_7,[window.document.createTextNode("Length - "),text_6]);
		neptune_platform_html_HtmlPlatform.addChildren(element_div_8,[tmp,element_button_0,tmp1,for_frag_1,tmp2,element_h2_7,window.document.createTextNode(" ")]);
		return element_div_8;
	}
};
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	var template = new Expressions().template();
	window.document.body.appendChild(template);
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var haxe_Log = function() { };
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) str += ", " + Std.string(_g1[_g++]);
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var neptune_platform_html_HtmlPlatform = function() { };
neptune_platform_html_HtmlPlatform.__name__ = true;
neptune_platform_html_HtmlPlatform.addChildren = function(element,children) {
	var _g = 0;
	while(_g < children.length) element.appendChild(children[_g++]);
	return element;
};
String.__name__ = true;
Array.__name__ = true;
js_Boot.__toStr = ({ }).toString;
Main.main();
})({});
