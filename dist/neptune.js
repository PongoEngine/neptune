// Generated by Haxe 4.2.1+bf9ff69
(function ($global) { "use strict";
var Expressions = function() {
};
Expressions.prototype = {
	template: function() {
		var x = 3;
		var onClick = function() {
			x += 1;
			console.log("src/Expressions.hx:42:",x);
		};
		var element_0 = window.document.createElement("div");
		element_0.appendChild(window.document.createTextNode("\n                "));
		var element_1 = window.document.createElement("button");
		element_1.setAttribute("id","hello");
		element_1.addEventListener("click",onClick);
		element_1.appendChild(window.document.createTextNode("Increment"));
		element_0.appendChild(element_1);
		element_0.appendChild(window.document.createTextNode("\n                "));
		var child;
		if(x == 3) {
			var element_2 = window.document.createElement("h3");
			element_2.appendChild(window.document.createTextNode("31"));
			child = element_2;
		} else {
			child = window.document.createTextNode("9");
		}
		element_0.appendChild(child);
		element_0.appendChild(window.document.createTextNode("\n            "));
		return element_0;
	}
};
var Main = function() { };
Main.main = function() {
	var template = new Expressions().template();
	window.document.body.appendChild(template);
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
Main.main();
})({});
