// Generated by Haxe 4.1.3
(function ($global) { "use strict";
var Expressions = function() {
};
Expressions.prototype = {
	template: function() {
		var set_length = function(val) {
		};
		var element_p_0 = window.document.createElement("p");
		neptune_platform_html_HtmlPlatform.addChildren(element_p_0,[window.document.createTextNode("Item1")]);
		var element_p_1 = window.document.createElement("p");
		neptune_platform_html_HtmlPlatform.addChildren(element_p_1,[window.document.createTextNode("Item2")]);
		var element_p_2 = window.document.createElement("p");
		neptune_platform_html_HtmlPlatform.addChildren(element_p_2,[window.document.createTextNode("Item3")]);
		var element_p_3 = window.document.createElement("p");
		neptune_platform_html_HtmlPlatform.addChildren(element_p_3,[window.document.createTextNode("Item4")]);
		var binop_6 = window.document.createTextNode("Taco" + 0);
		var arra_4 = [element_p_0,element_p_1,element_p_2,element_p_3][0];
		var length = 0;
		var onClick = function() {
			set_length(length + 1);
		};
		var frag = window.document.createElement("div");
		var _g = 0;
		var _g1 = length;
		while(_g < _g1) {
			var i_15 = window.document.createTextNode(_g++);
			var element_h1_16 = window.document.createElement("h1");
			neptune_platform_html_HtmlPlatform.addChildren(element_h1_16,[window.document.createTextNode("ForItem"),i_15]);
			frag.appendChild(element_h1_16);
		}
		var for_12 = frag;
		set_length = function(val) {
			length = val;
			var frag = window.document.createElement("div");
			var _g = 0;
			var _g1 = length;
			while(_g < _g1) {
				var i_15 = window.document.createTextNode(_g++);
				var element_h1_16 = window.document.createElement("h1");
				neptune_platform_html_HtmlPlatform.addChildren(element_h1_16,[window.document.createTextNode("ForItem"),i_15]);
				frag.appendChild(element_h1_16);
			}
			var to = frag;
			for_12.parentNode.replaceChild(to,for_12);
			for_12 = to;
		};
		var element_div_14 = window.document.createElement("div");
		var tmp = window.document.createTextNode(" ");
		var tmp1 = window.document.createTextNode(" ");
		var element_p_7 = window.document.createElement("p");
		neptune_platform_html_HtmlPlatform.addChildren(element_p_7,[binop_6]);
		var tmp2 = window.document.createTextNode(" ");
		var element_p_8 = window.document.createElement("p");
		neptune_platform_html_HtmlPlatform.addChildren(element_p_8,[window.document.createTextNode("Hello")]);
		var tmp3 = window.document.createTextNode(" ");
		var element_h1_9 = window.document.createElement("h1");
		neptune_platform_html_HtmlPlatform.addChildren(element_h1_9,[window.document.createTextNode("Hello")]);
		var element_p_10 = window.document.createElement("p");
		neptune_platform_html_HtmlPlatform.addChildren(element_p_10,[window.document.createTextNode("World")]);
		var element_button_11 = window.document.createElement("button");
		neptune_platform_html_HtmlPlatform.addChildren(element_button_11,[window.document.createTextNode("How are you?")]);
		element_button_11.onclick = onClick;
		neptune_platform_html_HtmlPlatform.addChildren(element_div_14,[tmp,arra_4,tmp1,element_p_7,tmp2,element_p_8,tmp3,neptune_platform_html_HtmlPlatform.createFragmentNodes([element_h1_9,element_p_10,element_button_11]),window.document.createTextNode(" "),for_12,window.document.createTextNode(" ")]);
		return element_div_14;
	}
};
var Main = function() { };
Main.main = function() {
	var template = new Expressions().template();
	window.document.body.appendChild(template);
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var neptune_platform_html_HtmlPlatform = function() { };
neptune_platform_html_HtmlPlatform.createFragmentNodes = function(nodes) {
	var frag = window.document.createDocumentFragment();
	var _g = 0;
	while(_g < nodes.length) frag.appendChild(nodes[_g++]);
	return frag;
};
neptune_platform_html_HtmlPlatform.addChildren = function(element,children) {
	var _g = 0;
	while(_g < children.length) element.appendChild(children[_g++]);
	return element;
};
Main.main();
})({});
